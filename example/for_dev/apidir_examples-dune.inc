;; generated by example/for_dev/generator/duneinc_generator.ml
;; file: apidir_examples-dune.inc
(subdir apidir_examples/typescript-metainfo
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_01.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01_no_mangling.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_01_no_mangling.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_02.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_02.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_03.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_03.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_04.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_04.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_05.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_05.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_06.ts)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-typescript-tests/sample_apidir_06.ts)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target}))))))
(subdir apidir_examples/openapi
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_01.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01_no_mangling.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_01_no_mangling.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_02.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_02.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_03.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_03.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_04.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_04.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_05.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_05.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target})))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_06.json)
  (action
   (with-stdout-to %{target}
    (pipe-stdout
     (cat %{workspace_root}/with_js/apidir-tests/sample_apidir_06.json)
     (run %{bin:npx} --prefix %{workspace_root}/with_js prettier --stdin-filepath %{target}))))))
(subdir apidir_examples/openapi/html
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01.openapi.html)
  (deps ../sample_apidir_01.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_01_no_mangling.openapi.html)
  (deps ../sample_apidir_01_no_mangling.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_02.openapi.html)
  (deps ../sample_apidir_02.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_03.openapi.html)
  (deps ../sample_apidir_03.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_04.openapi.html)
  (deps ../sample_apidir_04.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_05.openapi.html)
  (deps ../sample_apidir_05.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target sample_apidir_06.openapi.html)
  (deps ../sample_apidir_06.json)
  (action
   (run %{bin:npx} --prefix %{workspace_root}/with_js redocly build-docs %{deps} --output %{target})))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (target index.html)
  (deps
   %{workspace_root}/example/for_dev/generator/openapi_listing_generator.exe)
  (action
   (with-stdout-to %{target}
    (run
     %{deps}
     -samples
     "sample_apidir_01:sample_apidir_01_no_mangling:sample_apidir_02:sample_apidir_03:sample_apidir_04:sample_apidir_05:sample_apidir_06")))))
