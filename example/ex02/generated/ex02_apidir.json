{
  "openapi": "3.0.3",
  "info": { "title": "ex01", "version": "0.0.1" },
  "paths": {
    "/products/get": {
      "summary": "get-products",
      "post": {
        "summary": "get-products",
        "requestBody": {
          "description": "query to filter products",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductQuery" },
              "examples": {
                "Sample to get all products": { "value": {} },
                "Sample with search query": {
                  "value": { "searchQuery": "novel" }
                },
                "Sample with minimum price": {
                  "value": { "minimumPrice": 1000 }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Products matching the given query in the database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductList" },
                "examples": {
                  "Sample to get all products": {
                    "value": [
                      {
                        "id": 0,
                        "details": {
                          "name": "Pride and Prejudice",
                          "description": "A classic romance novel, describing the love story between Elizabeth Bennet and Fitzwilliam Darcy.",
                          "price": 800,
                          "count": 15
                        }
                      },
                      {
                        "id": 1,
                        "details": {
                          "name": "Moby Dick",
                          "description": "The story of captain Ahab's relentless pursuit of the white whale, Moby Dick.",
                          "price": 1200,
                          "count": 10
                        }
                      },
                      {
                        "id": 2,
                        "details": {
                          "name": "Dracula",
                          "description": "A Gothic horror novel, telling the story of the vampire Count Dracula.",
                          "price": 1000,
                          "count": 25
                        }
                      }
                    ]
                  },
                  "Sample with search query": {
                    "value": [
                      {
                        "id": 0,
                        "details": {
                          "name": "Pride and Prejudice",
                          "description": "A classic romance novel, describing the love story between Elizabeth Bennet and Fitzwilliam Darcy.",
                          "price": 800,
                          "count": 15
                        }
                      },
                      {
                        "id": 2,
                        "details": {
                          "name": "Dracula",
                          "description": "A Gothic horror novel, telling the story of the vampire Count Dracula.",
                          "price": 1000,
                          "count": 25
                        }
                      }
                    ]
                  },
                  "Sample with minimum price": {
                    "value": [
                      {
                        "id": 1,
                        "details": {
                          "name": "Moby Dick",
                          "description": "The story of captain Ahab's relentless pursuit of the white whale, Moby Dick.",
                          "price": 1200,
                          "count": 10
                        }
                      },
                      {
                        "id": 2,
                        "details": {
                          "name": "Dracula",
                          "description": "A Gothic horror novel, telling the story of the vampire Count Dracula.",
                          "price": 1000,
                          "count": 25
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/get": {
      "summary": "get-orders",
      "post": {
        "summary": "get-orders",
        "requestBody": {
          "description": "query to filter orders",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderQuery" },
              "examples": {
                "sample to get all orders": { "value": {} },
                "Sample with products": { "value": { "products": [0] } },
                "Sample with status": {
                  "value": { "status": ["Delivered"] }
                },
                "Sample with minimum total price": {
                  "value": { "minimumPrice": 1500 }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Orders matching the given query in the database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderList" },
                "examples": {
                  "sample to get all orders": {
                    "value": [
                      {
                        "id": 0,
                        "totalPrice": 2000,
                        "details": {
                          "products": [
                            { "_0": 0, "_1": 1 },
                            { "_0": 1, "_1": 1 }
                          ],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "1111222233334444",
                            "holderName": "John Smith",
                            "expirationDate": { "_0": 2026, "_1": 5 },
                            "cvv": "123"
                          }
                        },
                        "status": "Delivered"
                      },
                      {
                        "id": 1,
                        "totalPrice": 2000,
                        "details": {
                          "products": [{ "_0": 2, "_1": 2 }],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "2222333344445555",
                            "holderName": "Jane Smith",
                            "expirationDate": { "_0": 2025, "_1": 11 },
                            "cvv": "234"
                          }
                        },
                        "status": "Paid"
                      },
                      {
                        "id": 2,
                        "totalPrice": 800,
                        "details": {
                          "products": [{ "_0": 0, "_1": 1 }],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "3333444455556666",
                            "holderName": "Robert Johnson",
                            "expirationDate": { "_0": 2027, "_1": 6 },
                            "cvv": "345"
                          }
                        },
                        "status": "Canceled"
                      }
                    ]
                  },
                  "Sample with products": {
                    "value": [
                      {
                        "id": 0,
                        "totalPrice": 2000,
                        "details": {
                          "products": [
                            { "_0": 0, "_1": 1 },
                            { "_0": 1, "_1": 1 }
                          ],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "1111222233334444",
                            "holderName": "John Smith",
                            "expirationDate": { "_0": 2026, "_1": 5 },
                            "cvv": "123"
                          }
                        },
                        "status": "Delivered"
                      },
                      {
                        "id": 2,
                        "totalPrice": 800,
                        "details": {
                          "products": [{ "_0": 0, "_1": 1 }],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "3333444455556666",
                            "holderName": "Robert Johnson",
                            "expirationDate": { "_0": 2027, "_1": 6 },
                            "cvv": "345"
                          }
                        },
                        "status": "Canceled"
                      }
                    ]
                  },
                  "Sample with status": {
                    "value": [
                      {
                        "id": 0,
                        "totalPrice": 2000,
                        "details": {
                          "products": [
                            { "_0": 0, "_1": 1 },
                            { "_0": 1, "_1": 1 }
                          ],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "1111222233334444",
                            "holderName": "John Smith",
                            "expirationDate": { "_0": 2026, "_1": 5 },
                            "cvv": "123"
                          }
                        },
                        "status": "Delivered"
                      }
                    ]
                  },
                  "Sample with minimum total price": {
                    "value": [
                      {
                        "id": 0,
                        "totalPrice": 2000,
                        "details": {
                          "products": [
                            { "_0": 0, "_1": 1 },
                            { "_0": 1, "_1": 1 }
                          ],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "1111222233334444",
                            "holderName": "John Smith",
                            "expirationDate": { "_0": 2026, "_1": 5 },
                            "cvv": "123"
                          }
                        },
                        "status": "Delivered"
                      },
                      {
                        "id": 1,
                        "totalPrice": 2000,
                        "details": {
                          "products": [{ "_0": 2, "_1": 2 }],
                          "paymentMethod": {
                            "kind": "credit-card",
                            "cardNumber": "2222333344445555",
                            "holderName": "Jane Smith",
                            "expirationDate": { "_0": 2025, "_1": 11 },
                            "cvv": "234"
                          }
                        },
                        "status": "Paid"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/product/get": {
      "summary": "get-product",
      "post": {
        "summary": "get-product",
        "requestBody": {
          "description": "Product ID",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductId" },
              "examples": {
                "Succeeded with ID=0": { "value": 0 },
                "Succeeded with ID=1": { "value": 1 },
                "ID not found": { "value": 10 }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Product of the ID",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" },
                "examples": {
                  "Succeeded with ID=0": {
                    "value": {
                      "id": 0,
                      "details": {
                        "name": "Pride and Prejudice",
                        "description": "A classic romance novel, describing the love story between Elizabeth Bennet and Fitzwilliam Darcy.",
                        "price": 800,
                        "count": 15
                      }
                    }
                  },
                  "Succeeded with ID=1": {
                    "value": {
                      "id": 1,
                      "details": {
                        "name": "Moby Dick",
                        "description": "The story of captain Ahab's relentless pursuit of the white whale, Moby Dick.",
                        "price": 1200,
                        "count": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The readon why the Product ID is unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "ID not found": {
                    "value": "Product of the given ID is not found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/order/get": {
      "summary": "get-order",
      "post": {
        "summary": "get-order",
        "requestBody": {
          "description": "Rrder ID",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderId" },
              "examples": {
                "Succeeded with ID=0": { "value": 0 },
                "Succeeded with ID=1": { "value": 1 },
                "ID not found": { "value": 10 }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "order of the ID",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" },
                "examples": {
                  "Succeeded with ID=0": {
                    "value": {
                      "id": 0,
                      "totalPrice": 2000,
                      "details": {
                        "products": [
                          { "_0": 0, "_1": 1 },
                          { "_0": 1, "_1": 1 }
                        ],
                        "paymentMethod": {
                          "kind": "credit-card",
                          "cardNumber": "1111222233334444",
                          "holderName": "John Smith",
                          "expirationDate": { "_0": 2026, "_1": 5 },
                          "cvv": "123"
                        }
                      },
                      "status": "Delivered"
                    }
                  },
                  "Succeeded with ID=1": {
                    "value": {
                      "id": 0,
                      "totalPrice": 2000,
                      "details": {
                        "products": [
                          { "_0": 0, "_1": 1 },
                          { "_0": 1, "_1": 1 }
                        ],
                        "paymentMethod": {
                          "kind": "credit-card",
                          "cardNumber": "1111222233334444",
                          "holderName": "John Smith",
                          "expirationDate": { "_0": 2026, "_1": 5 },
                          "cvv": "123"
                        }
                      },
                      "status": "Delivered"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The readon why the Order ID is unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "ID not found": {
                    "value": "Order of the given ID is not found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/product/register": {
      "summary": "register-product",
      "post": {
        "summary": "register-product",
        "requestBody": {
          "description": "Product details to be registered to the database",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductDetails" },
              "examples": {
                "example_0": {
                  "value": {
                    "name": "Frankenstein",
                    "description": "A tale of young scientist Victor Frankenstein and his creation of a grotesque monster.",
                    "price": 950,
                    "count": 7
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Product ID added to the database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductId" },
                "examples": { "example_0": { "value": 3 } }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/order/register": {
      "summary": "register-order",
      "post": {
        "summary": "register-order",
        "requestBody": {
          "description": "order details to be registered to the database",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderDetails" },
              "examples": {
                "Registered successfully": {
                  "value": {
                    "products": [
                      { "_0": 0, "_1": 1 },
                      { "_0": 1, "_1": 1 }
                    ],
                    "paymentMethod": {
                      "kind": "credit-card",
                      "cardNumber": "3333444455556666",
                      "holderName": "Robert Johnson",
                      "expirationDate": { "_0": 2027, "_1": 6 },
                      "cvv": "345"
                    }
                  }
                },
                "Product not found": {
                  "value": {
                    "products": [{ "_0": 9, "_1": 1 }],
                    "paymentMethod": {
                      "kind": "bank-transfer",
                      "accountNumber": "123456789",
                      "bankName": "Bank of Example",
                      "holderName": "Alice Brown"
                    }
                  }
                },
                "Inventory shortage": {
                  "value": {
                    "products": [{ "_0": 0, "_1": 100 }],
                    "paymentMethod": {
                      "kind": "bank-transfer",
                      "accountNumber": "234567890",
                      "bankName": "Example Savings",
                      "holderName": "Emma Davis"
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ID of the order",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderId" },
                "examples": { "Registered successfully": { "value": 3 } }
              }
            }
          },
          "400": {
            "description": "The readon why the product ID is unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "Product not found": {
                    "value": "Product of the given ID is not found"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The readon why the order is unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "Inventory shortage": { "value": "inventory shortage" }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/product/details/update": {
      "summary": "update-product-details",
      "post": {
        "summary": "update-product-details",
        "requestBody": {
          "description": "product details to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDetailsWithId"
              },
              "examples": {
                "Updated successfully": {
                  "value": {
                    "_0": 0,
                    "_1": {
                      "name": "Pride and Prejudice",
                      "description": "new desc",
                      "price": 800,
                      "count": 15
                    }
                  }
                },
                "ID not found": {
                  "value": {
                    "_0": 8,
                    "_1": {
                      "name": "The Adventures of Sherlock Holmes",
                      "description": "A collection of short stories featuring the brilliant detective Sherlock Holmes and his loyal friend, Dr. Watson.",
                      "price": 1300,
                      "count": 12
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ID of the order",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderId" },
                "examples": { "Updated successfully": { "value": 0 } }
              }
            }
          },
          "400": {
            "description": "The readon why the status details are unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "ID not found": {
                    "value": "Product of the given ID is not found."
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/order/status/update": {
      "summary": "update-order-status",
      "post": {
        "summary": "update-order-status",
        "requestBody": {
          "description": "order status to be updated",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderStatusWithId" },
              "examples": {
                "Updated successfully": {
                  "value": { "_0": 1, "_1": "Shipped" }
                },
                "Invalid order status": {
                  "value": { "_0": 1, "_1": "Unpaid" }
                },
                "ID not found": { "value": { "_0": 10, "_1": "Canceled" } }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ID of the order",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderId" },
                "examples": { "Updated successfully": { "value": 1 } }
              }
            }
          },
          "400": {
            "description": "The readon why the order details are unavailable.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/String" },
                "examples": {
                  "Invalid order status": { "value": "Invalid order status" },
                  "ID not found": {
                    "value": "Order of the given ID is not found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "totalPrice": { "type": "integer" },
          "details": {
            "type": "object",
            "properties": {
              "products": {
                "description": "ID and it's count of ordered products",
                "type": "array",
                "items": {
                  "description": "ID and it's count of ordered products",
                  "type": "object",
                  "properties": {
                    "_0": { "$ref": "#/components/schemas/ProductId" },
                    "_1": {
                      "description": "ID and it's count of ordered products",
                      "type": "integer"
                    }
                  },
                  "required": ["_0", "_1"],
                  "additionalProperties": false
                }
              },
              "paymentMethod": {
                "description": "Payment method of an order",
                "oneOf": [
                  {
                    "title": "credit-card",
                    "description": "Payment by credit card",
                    "type": "object",
                    "properties": {
                      "cardNumber": {
                        "description": "Card number",
                        "type": "string"
                      },
                      "holderName": {
                        "description": "Card holder name",
                        "type": "string"
                      },
                      "expirationDate": {
                        "description": "Expiration date",
                        "type": "object",
                        "properties": {
                          "_0": {
                            "description": "Expiration date",
                            "type": "integer"
                          },
                          "_1": {
                            "description": "Expiration date",
                            "type": "integer"
                          }
                        },
                        "required": ["_0", "_1"],
                        "additionalProperties": false
                      },
                      "cvv": { "description": "Card CVV", "type": "string" },
                      "kind": { "enum": ["credit-card"], "type": "string" }
                    },
                    "required": ["cardNumber", "holderName", "expirationDate", "cvv", "kind"],
                    "additionalProperties": false
                  },
                  {
                    "title": "bank-transfer",
                    "description": "Payment by bank transer",
                    "type": "object",
                    "properties": {
                      "accountNumber": {
                        "description": "Account number",
                        "type": "string"
                      },
                      "bankName": {
                        "description": "Bank name",
                        "type": "string"
                      },
                      "holderName": {
                        "description": "Account holder name",
                        "type": "string"
                      },
                      "kind": {
                        "enum": ["bank-transfer"],
                        "type": "string"
                      }
                    },
                    "required": ["accountNumber", "bankName", "holderName", "kind"],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": ["products", "paymentMethod"],
            "additionalProperties": false
          },
          "status": {
            "description": "Status of an order",
            "enum": ["Unpaid", "Paid", "Shipped", "Delivered", "Canceled"],
            "type": "string"
          }
        },
        "required": ["id", "totalPrice", "details", "status"],
        "additionalProperties": false
      },
      "OrderDetails": {
        "title": "OrderDetails",
        "type": "object",
        "properties": {
          "products": {
            "description": "ID and it's count of ordered products",
            "type": "array",
            "items": {
              "description": "ID and it's count of ordered products",
              "type": "object",
              "properties": {
                "_0": { "$ref": "#/components/schemas/ProductId" },
                "_1": {
                  "description": "ID and it's count of ordered products",
                  "type": "integer"
                }
              },
              "required": ["_0", "_1"],
              "additionalProperties": false
            }
          },
          "paymentMethod": {
            "description": "Payment method of an order",
            "oneOf": [
              {
                "title": "credit-card",
                "description": "Payment by credit card",
                "type": "object",
                "properties": {
                  "cardNumber": {
                    "description": "Card number",
                    "type": "string"
                  },
                  "holderName": {
                    "description": "Card holder name",
                    "type": "string"
                  },
                  "expirationDate": {
                    "description": "Expiration date",
                    "type": "object",
                    "properties": {
                      "_0": {
                        "description": "Expiration date",
                        "type": "integer"
                      },
                      "_1": {
                        "description": "Expiration date",
                        "type": "integer"
                      }
                    },
                    "required": ["_0", "_1"],
                    "additionalProperties": false
                  },
                  "cvv": { "description": "Card CVV", "type": "string" },
                  "kind": { "enum": ["credit-card"], "type": "string" }
                },
                "required": ["cardNumber", "holderName", "expirationDate", "cvv", "kind"],
                "additionalProperties": false
              },
              {
                "title": "bank-transfer",
                "description": "Payment by bank transer",
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "description": "Account number",
                    "type": "string"
                  },
                  "bankName": {
                    "description": "Bank name",
                    "type": "string"
                  },
                  "holderName": {
                    "description": "Account holder name",
                    "type": "string"
                  },
                  "kind": { "enum": ["bank-transfer"], "type": "string" }
                },
                "required": ["accountNumber", "bankName", "holderName", "kind"],
                "additionalProperties": false
              }
            ]
          }
        },
        "required": ["products", "paymentMethod"],
        "additionalProperties": false
      },
      "OrderId": { "title": "OrderId", "type": "integer" },
      "OrderList": {
        "title": "OrderList",
        "type": "array",
        "items": { "$ref": "#/components/schemas/Order" }
      },
      "OrderQuery": {
        "title": "OrderQuery",
        "description": "Query to search orders",
        "type": "object",
        "properties": {
          "products": {
            "description": "List of product IDs in the order",
            "nullable": true,
            "type": "array",
            "items": {
              "description": "List of product IDs in the order",
              "type": "integer"
            }
          },
          "status": {
            "description": "Optional order status constraint",
            "nullable": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderStatus" }
          },
          "minimumPrice": {
            "description": "Optional minimum total price constraint for the order",
            "nullable": true,
            "type": "integer"
          },
          "maximumPrice": {
            "description": "Optional maximum total price constraint for the order",
            "nullable": true,
            "type": "integer"
          },
          "limit": {
            "description": "Number limit of data to be acquired.",
            "nullable": true,
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "title": "OrderStatus",
        "description": "Status of an order",
        "enum": ["Unpaid", "Paid", "Shipped", "Delivered", "Canceled"],
        "type": "string"
      },
      "PaymentMethod": {
        "title": "PaymentMethod",
        "description": "Payment method of an order",
        "oneOf": [
          {
            "title": "credit-card",
            "description": "Payment by credit card",
            "type": "object",
            "properties": {
              "cardNumber": {
                "description": "Card number",
                "type": "string"
              },
              "holderName": {
                "description": "Card holder name",
                "type": "string"
              },
              "expirationDate": {
                "description": "Expiration date",
                "type": "object",
                "properties": {
                  "_0": {
                    "description": "Expiration date",
                    "type": "integer"
                  },
                  "_1": {
                    "description": "Expiration date",
                    "type": "integer"
                  }
                },
                "required": ["_0", "_1"],
                "additionalProperties": false
              },
              "cvv": { "description": "Card CVV", "type": "string" },
              "kind": { "enum": ["credit-card"], "type": "string" }
            },
            "required": ["cardNumber", "holderName", "expirationDate", "cvv", "kind"],
            "additionalProperties": false
          },
          {
            "title": "bank-transfer",
            "description": "Payment by bank transer",
            "type": "object",
            "properties": {
              "accountNumber": {
                "description": "Account number",
                "type": "string"
              },
              "bankName": { "description": "Bank name", "type": "string" },
              "holderName": {
                "description": "Account holder name",
                "type": "string"
              },
              "kind": { "enum": ["bank-transfer"], "type": "string" }
            },
            "required": ["accountNumber", "bankName", "holderName", "kind"],
            "additionalProperties": false
          }
        ]
      },
      "Product": {
        "title": "Product",
        "description": "Product",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "details": {
            "description": "Product details",
            "type": "object",
            "properties": {
              "name": { "description": "Product name", "type": "string" },
              "description": {
                "description": "Product description",
                "type": "string"
              },
              "price": { "description": "Product price", "type": "integer" },
              "count": {
                "description": "Count of the product",
                "type": "integer"
              }
            },
            "required": ["name", "description", "price", "count"],
            "additionalProperties": false
          }
        },
        "required": ["id", "details"],
        "additionalProperties": false
      },
      "ProductDetails": {
        "title": "ProductDetails",
        "description": "Product details",
        "type": "object",
        "properties": {
          "name": { "description": "Product name", "type": "string" },
          "description": {
            "description": "Product description",
            "type": "string"
          },
          "price": { "description": "Product price", "type": "integer" },
          "count": {
            "description": "Count of the product",
            "type": "integer"
          }
        },
        "required": ["name", "description", "price", "count"],
        "additionalProperties": false
      },
      "ProductDetailsWithId": {
        "title": "ProductDetailsWithId",
        "type": "object",
        "properties": {
          "_0": { "$ref": "#/components/schemas/ProductId" },
          "_1": { "$ref": "#/components/schemas/ProductDetails" }
        },
        "required": ["_0", "_1"],
        "additionalProperties": false
      },
      "ProductId": { "title": "ProductId", "type": "integer" },
      "ProductList": {
        "title": "ProductList",
        "type": "array",
        "items": { "$ref": "#/components/schemas/Product" }
      },
      "ProductQuery": {
        "title": "ProductQuery",
        "description": "Query to search products",
        "type": "object",
        "properties": {
          "searchQuery": {
            "description": "Optional search string to match product names or descriptions",
            "nullable": true,
            "type": "string"
          },
          "minimumPrice": {
            "description": "Optional minimum price constraint for a product",
            "nullable": true,
            "type": "integer"
          },
          "maximumPrice": {
            "description": "Optional maximum price constraint for a product",
            "nullable": true,
            "type": "integer"
          },
          "limit": {
            "description": "Number limit of data to be acquired.",
            "nullable": true,
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "String": { "title": "String", "type": "string" }
    }
  }
}
