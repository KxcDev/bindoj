;; generated by src/lib_gen/unit_test/gen/duneinc_generator.ml
;; file: output-with-decl-dune.inc
(subdir output_with_decl
 (library
  (name bindoj_gen_test_gen_output_with_decl)
  (modules
   ex_coretype_gen
   ex_alias_gen
   ex_record_gen
   ex_variant_gen
   ex_mangling_gen
   ex_optional_gen
   ex_ident_gen
   ex_nested_gen
   ex_nested_multiply_gen
   ex_version_substring_gen)
  (libraries
   bindoj.base
   bindoj.std_runtime
   bindoj_test_common_typedesc_examples))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_coretype_gen.ml ex_coretype_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_coretype_gen.ml
     (run %{generator} ex_coretype_gen.ml -gen-type-decl))
    (with-stdout-to ex_coretype_gen.mli
     (run %{generator} ex_coretype_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_alias_gen.ml ex_alias_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_alias_gen.ml
     (run %{generator} ex_alias_gen.ml -gen-type-decl))
    (with-stdout-to ex_alias_gen.mli
     (run %{generator} ex_alias_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_record_gen.ml ex_record_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_record_gen.ml
     (run %{generator} ex_record_gen.ml -gen-type-decl))
    (with-stdout-to ex_record_gen.mli
     (run %{generator} ex_record_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_variant_gen.ml ex_variant_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_variant_gen.ml
     (run %{generator} ex_variant_gen.ml -gen-type-decl))
    (with-stdout-to ex_variant_gen.mli
     (run %{generator} ex_variant_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_mangling_gen.ml ex_mangling_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_mangling_gen.ml
     (run %{generator} ex_mangling_gen.ml -gen-type-decl))
    (with-stdout-to ex_mangling_gen.mli
     (run %{generator} ex_mangling_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_optional_gen.ml ex_optional_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_optional_gen.ml
     (run %{generator} ex_optional_gen.ml -gen-type-decl))
    (with-stdout-to ex_optional_gen.mli
     (run %{generator} ex_optional_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_ident_gen.ml ex_ident_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_ident_gen.ml
     (run %{generator} ex_ident_gen.ml -gen-type-decl))
    (with-stdout-to ex_ident_gen.mli
     (run %{generator} ex_ident_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_nested_gen.ml ex_nested_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_nested_gen.ml
     (run %{generator} ex_nested_gen.ml -gen-type-decl))
    (with-stdout-to ex_nested_gen.mli
     (run %{generator} ex_nested_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_nested_multiply_gen.ml ex_nested_multiply_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_nested_multiply_gen.ml
     (run %{generator} ex_nested_multiply_gen.ml -gen-type-decl))
    (with-stdout-to ex_nested_multiply_gen.mli
     (run %{generator} ex_nested_multiply_gen.mli -gen-type-decl)))))
 (rule
  (alias gen)
  (mode (promote (until-clean)))
  (targets ex_version_substring_gen.ml ex_version_substring_gen.mli)
  (deps (:generator ../gen.exe))
  (action
   (progn
    (with-stdout-to ex_version_substring_gen.ml
     (run %{generator} ex_version_substring_gen.ml -gen-type-decl))
    (with-stdout-to ex_version_substring_gen.mli
     (run %{generator} ex_version_substring_gen.mli -gen-type-decl))))))
